"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var expansion_panels_container_1 = require("../expansion-panels-container");
var ExpansionPanelComponent = (function () {
    function ExpansionPanelComponent(container) {
        this.container = container;
        this.onOpen = new core_1.EventEmitter();
        this.onClose = new core_1.EventEmitter();
        this.onCancel = new core_1.EventEmitter();
        this.onSubmit = new core_1.EventEmitter();
    }
    ExpansionPanelComponent.prototype.toggle = function () {
        (this.isToggled) ? this.unselect() : this.select();
    };
    Object.defineProperty(ExpansionPanelComponent.prototype, "isToggled", {
        get: function () {
            return this.container.selectedPanel === this;
        },
        enumerable: true,
        configurable: true
    });
    ExpansionPanelComponent.prototype.submit = function () {
        this.unselect();
        this.onSubmit.emit();
    };
    ExpansionPanelComponent.prototype.cancel = function () {
        this.unselect();
        this.onCancel.emit();
    };
    ExpansionPanelComponent.prototype.select = function () {
        this.container.selectedPanel = this;
        this.onOpen.emit(this);
    };
    ExpansionPanelComponent.prototype.unselect = function () {
        this.container.selectedPanel = undefined;
        this.onClose.emit(this);
    };
    return ExpansionPanelComponent;
}());
__decorate([
    core_1.Output(),
    __metadata("design:type", core_1.EventEmitter)
], ExpansionPanelComponent.prototype, "onOpen", void 0);
__decorate([
    core_1.Output(),
    __metadata("design:type", core_1.EventEmitter)
], ExpansionPanelComponent.prototype, "onClose", void 0);
__decorate([
    core_1.Output(),
    __metadata("design:type", core_1.EventEmitter)
], ExpansionPanelComponent.prototype, "onCancel", void 0);
__decorate([
    core_1.Output(),
    __metadata("design:type", core_1.EventEmitter)
], ExpansionPanelComponent.prototype, "onSubmit", void 0);
ExpansionPanelComponent = __decorate([
    core_1.Component({
        selector: 'expansion-panel',
        styleUrls: ['./expansion-panel.style.scss'],
        templateUrl: './expansion-panel.template.html'
    }),
    __metadata("design:paramtypes", [expansion_panels_container_1.ExpansionPanelsContainerComponent])
], ExpansionPanelComponent);
exports.ExpansionPanelComponent = ExpansionPanelComponent;
//# sourceMappingURL=expansion-panel.component.js.map