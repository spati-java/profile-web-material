{"version":3,"file":"expansion-panel.component.js","sourceRoot":"","sources":["../../../../modules/components/expansion-panel/expansion-panel.component.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAIuB;AAEvB,4EAAkF;AAOlF,IAAa,uBAAuB;IAOhC,iCAAoB,SAA4C;QAA5C,cAAS,GAAT,SAAS,CAAmC;QAL9C,WAAM,GAA0C,IAAI,mBAAY,EAAE,CAAC;QACnE,YAAO,GAA0C,IAAI,mBAAY,EAAE,CAAC;QACpE,aAAQ,GAAsB,IAAI,mBAAY,EAAE,CAAC;QACjD,aAAQ,GAAsB,IAAI,mBAAY,EAAE,CAAC;IAEA,CAAC;IAK7D,wCAAM,GAAb;QACI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,QAAQ,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;IACvD,CAAC;IAMD,sBAAW,8CAAS;aAApB;YACI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,KAAK,IAAI,CAAC;QACjD,CAAC;;;OAAA;IAKM,wCAAM,GAAb;QACI,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACzB,CAAC;IAKM,wCAAM,GAAb;QACI,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACzB,CAAC;IAKO,wCAAM,GAAd;QACI,IAAI,CAAC,SAAS,CAAC,aAAa,GAAG,IAAI,CAAC;QACpC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IAKO,0CAAQ,GAAhB;QACI,IAAI,CAAC,SAAS,CAAC,aAAa,GAAG,SAAS,CAAC;QACzC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC;IACL,8BAAC;AAAD,CAAC,AAvDD,IAuDC;AArDa;IAAT,aAAM,EAAE;8BAAiB,mBAAY;uDAA+C;AAC3E;IAAT,aAAM,EAAE;8BAAkB,mBAAY;wDAA+C;AAC5E;IAAT,aAAM,EAAE;8BAAmB,mBAAY;yDAA2B;AACzD;IAAT,aAAM,EAAE;8BAAmB,mBAAY;yDAA2B;AAL1D,uBAAuB;IALnC,gBAAS,CAAC;QACP,QAAQ,EAAE,iBAAiB;QAC3B,SAAS,EAAE,CAAE,8BAA8B,CAAE;QAC7C,WAAW,EAAE,iCAAiC;KACjD,CAAC;qCAQiC,8DAAiC;GAPvD,uBAAuB,CAuDnC;AAvDY,0DAAuB","sourcesContent":["import {\n    Component,\n    Output,\n    EventEmitter\n} from '@angular/core';\n\nimport { ExpansionPanelsContainerComponent } from '../expansion-panels-container';\n\n@Component({\n    selector: 'expansion-panel',\n    styleUrls: [ './expansion-panel.style.scss' ],\n    templateUrl: './expansion-panel.template.html'\n})\nexport class ExpansionPanelComponent {\n    // outputs\n    @Output() private onOpen: EventEmitter<ExpansionPanelComponent> = new EventEmitter();\n    @Output() private onClose: EventEmitter<ExpansionPanelComponent> = new EventEmitter();\n    @Output() private onCancel: EventEmitter<any> = new EventEmitter();\n    @Output() private onSubmit: EventEmitter<any> = new EventEmitter();\n\n    constructor(private container: ExpansionPanelsContainerComponent) {}\n\n    /**\n     * @name toggle\n     */\n    public toggle(): void {\n        (this.isToggled) ? this.unselect() : this.select();\n    }\n\n    /**\n     * @name isToggled\n     * @returns {boolean}\n     */\n    public get isToggled(): boolean {\n        return this.container.selectedPanel === this;\n    }\n\n    /**\n     * @name submit\n     */\n    public submit(): void {\n        this.unselect();\n        this.onSubmit.emit();\n    }\n\n    /**\n     * @name cancel\n     */\n    public cancel(): void {\n        this.unselect();\n        this.onCancel.emit();\n    }\n\n    /**\n     * @name select\n     */\n    private select(): void {\n        this.container.selectedPanel = this;\n        this.onOpen.emit(this);\n    }\n\n    /**\n     * @name unselect\n     */\n    private unselect(): void {\n        this.container.selectedPanel = undefined;\n        this.onClose.emit(this);\n    }\n}\n"]}